#colors
  {{ changeColors }}
  = f.simple_fields_for :appearance, html: {multipart: true} do |f|
    .col-md-7.col-lg-6
      .box.slice-box.hidden-xs
        .box-header.with-border
          %h3.box-title Preview

        / /.box-header
        .box-body.box-body-no-padding
          - if f.object.image_background?
            .appearance-img{style: "background-image:url(#{f.object.image_background_url})"}
              = render 'admin/settings/components/preview'
          - else
            .appearance-img{style: "background-image:url('/assets/admin/profile-menu.jpg')"}
              = render 'admin/settings/components/preview'
    .col-md-5.col-lg-6
      .box.slice-box
        .box-header.with-border
          %h3.box-title Admin Theme

        .box-body
          .upload_image
            .files.form-group.trigger{ class: "#{'files-absolute' unless f.object.image_background.blank?}" }
              = f.file_field :image_background, class: 'photo_upload'
            %center.image-show
              = image_tag "#{f.object.image_background.blank? ? '' : f.object.image_background}", class: "#{'hidden' if f.object.image_background.blank?} image_to_upload"
          %p Principal
          %input{type: 'color', name: 'color', placeholder: 'Color', value: @color, 'v-model' => 'main'}
          -# = text_field_tag :color, nil, placeholder: "Color", value: @color
          -# %p Hover
          -# = text_field_tag :accent, nil, placeholder: "Accent", value: @accent, class: "color-input"
          -# .hidden
          -# 	= text_field_tag :darken, nil, placeholder: "Darken", value: @darken, class: "color-input"
          .pull-right
            - if @render.eql?('appearance')
              = link_to appearance_default_admin_settings_path(@render), class: 'btn btn-default', method: :put do
                = t('keppler.actions.appearance_defaut')
            = f.button :submit, t('keppler.actions.apply'), class: 'btn btn-primary change-color'

:javascript
  var vm = new Vue({
    el: '#colors',
    data: {
      main: "#{@color}"
    },
    computed: {
      changeColors() {
        if (this.main) {
          $('.keppler-color').css('color', this.main)
          $('.keppler-background').css('background', this.main)
          $('.keppler-border-top-color').css('border-top-color', this.main)
          $('.keppler-border-left-color').css('border-left-color', this.main)
          $('.logo').css('background', this.main)
          $('.btn-primary').css('background', this.main)
          $('.slice-box').css('border-top-color', this.main)
          $('#span').css('color', this.main)
          $('.side-img-profile').css('background', this.main)
          $('.small-profile-img').css('background', this.main)
          $('.login-logo span').css('color', this.main)
          $('.login-footer span').css('color', this.main)
          $('.sidebar-menu > li:hover > a, .sidebar-menu > li.active > a')
            .css({
              'color': this.main,
              'border-left-color': this.main
            })
        }
      }
    }
  })
