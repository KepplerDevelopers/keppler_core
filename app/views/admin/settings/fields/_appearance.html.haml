#colors
  {{ changeColors }}
  = f.simple_fields_for :appearance, html: {multipart: true} do |f|
    .col-md-7.col-lg-8
      .box.slice-box
        .box-header.with-border
          %h3.box-title Preview

        / /.box-header
        .box-body.box-body-no-padding
          - if f.object.image_background?
            .appearance-img{style: "background-image:url(#{f.object.image_background_url})"}
              = render "admin/settings/components/preview"
          - else
            -# %iframe{src:"http://localhost:3000", frameborder:"0", style:"zoom: 0.75; transform: scale(0.75); transform-origin: 0 0;"}
            .appearance-img{style: "background-image:url('/assets/admin/profile-menu.jpg')"}
              = render "admin/settings/components/preview"
    .col-md-5.col-lg-4
      .box.slice-box
        .box-header.with-border
          %h3.box-title Admin Theme

        .box-body
          .upload-image
            .form-group.files.trigger
              #icon-file
                +
              = f.file_field :image_background, class: 'photo_upload'
            %center#image
              = image_tag 'image_background.png', class: 'hidden image_to_upload'
          %p Principal
          %input{type: "color", name: "color", placeholder: "Color", value: "#{@color}", "v-model" => "main"}
          -# = text_field_tag :color, nil, placeholder: "Color", value: @color
          -# %br
          -# %br
          -# %p Hover
          -# = text_field_tag :accent, nil, placeholder: "Accent", value: @accent, class: "color-input"
          -# .hidden
          -# 	= text_field_tag :darken, nil, placeholder: "Darken", value: @darken, class: "color-input"
          .pull-right
            - if @render.eql?('appearance')
              = link_to appearance_default_admin_settings_path(@render), class: "btn btn-default", method: :put do
                = t("keppler.actions.appearance_defaut")
            = f.button :submit, t("keppler.actions.apply"), class: "btn btn-primary change-color", style: "margin-left:10px"

:javascript
  new Vue({
    el: '#colors',
    data: {
      main: "#{@color}"
    },
    computed: {
      changeColors() {
        if (this.main) {
          $('.logo').css('background', this.main)
          $('.btn-primary').css('background', this.main)
          $('.slice-box').css('border-top-color', this.main)
          $('#span').css('color', this.main)
        }
      }
    }
  })
