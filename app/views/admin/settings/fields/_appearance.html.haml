#appearance
	{{ changeColor }}
	= f.simple_fields_for :appearance, html: {multipart: true} do |f|
		.col.s12
			.card.small
				.card-image
					- if f.object.image_background?
						= image_tag f.object.image_background_url
						.remove-field
							= f.input :remove_image_background, as: :checkbox_material
					- else
						= image_tag "admin/profile-menu.jpg"
						%span.card-title Upload Background
				.card-action
					= f.input :image_background, as: :file_material, label: false, wrapper_html: { class: "file-field" }
					= f.input :image_background_cache, as: :hidden
		/= f.input :theme_name, collection: [["Keppler-theme", "keppler"], ["Cyan-theme", "cyan"], ["Brown-theme", "brown"], ["Pink-theme", "pink"], ["Amber-theme", "amber"], ["Grey-theme", "grey"]],input_html: { class: "browser-default"}, label: false, include_blank: "Select theme"
		.col.s4
			= f.label "Principal"
			%input{type: "color", "v-model" => "color", name: "color", "v-bind:value": "color"}
			-# = text_field_tag :color, nil, placeholder: "Color", value: @color, class: "color-input", "v-model" => "color"
		.col.s4
			= f.label "Darken"
			%input{type: "color", "v-model" => "darken", name: "darken", "v-bind:value": "darken"}
			-# = text_field_tag :darken, nil, placeholder: "Darken", value: @darken, class: "color-input"
		.col.s4
			= f.label "Accent"
			%input{type: "color", "v-model" => "accent", name: "accent", "v-bind:value": "accent"}
			-# = text_field_tag :accent, nil, placeholder: "Accent", value: @accent, class: "color-input"
:javascript
	new Vue({
		el: '#appearance',
		data: {
			color: "#{@color}",
			darken: "#{@darken}",
			accent: "#{@accent}"
		},
		computed: {
			changeColor() {
				if (this.color) {
					$('.header-information').css('background', this.color)
					$('nav').css('background', this.color)
				}

				if(this.accent) {
					$('.btn').not('.btn-white').css('background', this.accent)
					$('.btn-white').css('color', this.accent)
				}
			}
		}
	})
	$('.color-input').minicolors()
