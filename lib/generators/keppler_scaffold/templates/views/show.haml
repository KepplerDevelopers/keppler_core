.container
  .row
    .col-md-2
      = link_to admin_<%= plural_table_name %>_path, 'data-position' => 'bottom', 'data-tooltip' => t('keppler.actions.back') do
        .arrow-back.btn.btn-default
          %i.fa.fa-angle-left
          = t('keppler.actions.back')

  .show-section
    .row
      .col-xs-12
        .box.slice-box
          .box-header.with-border
            %h3.box-title= t("keppler.modules.#{controller_name.underscore}")
            .box-tools.pull-right
              - if can?(<%= singular_table_name.camelcase %>).update?
                = link_to edit_admin_<%= singular_table_name %>_path(@<%= singular_table_name %>), class: 'btn btn-box-tool', title: t('keppler.actions.edit') do
                  %i.icon-pencil
              - if can?(<%= singular_table_name.camelcase %>).destroy?
                = link_to admin_<%= singular_table_name %>_path(@<%= singular_table_name %>), class: 'btn btn-box-tool', title: t('keppler.actions.delete'), method: :delete, data: { confirm: t('keppler.messages.data_confirm') } do
                  %i.icon-trash
          .box-body.box-body-no-padding
            %table.table.table-striped
              %tbody
                - @<%= singular_table_name %>.as_json(except: %i[id position created_at updated_at deleted_at]).each do |attribute, value|
                  %tr.list-row
                    %th.display-label= t("activerecord.attributes.#{attribute}")
                    %td.display-value.fs-body-1.tc-black-2
                      <%- if @attachments[:images][:types].include?(attribute) %>
                      - if @attachments[:images][:types].include?(attribute)
                        = image_tag value.url unless value.url.blank?
                      <%- elsif value.is_a?(Array) %>
                      - elsif value.is_a?(Array)
                        - value.each do |image|
                          = image_tag image.url unless image.url.blank?
                      <%- elsif @attachments[:videos][:types].include?(attribute) %>
                      - elsif @attachments[:videos][:types].include?(attribute)
                        = video_tag value.url, controls: true unless value.url.blank? do
                          Sorry, your browser doesn't support embedded videos, but don't worry, you can
                          = link_to 'download it', value.url
                          and watch it with your favorite video player!
                      <%- elsif @attachments[:audios][:types].include?(attribute) %>
                      - elsif @attachments[:audios][:types].include?(attribute)
                        = audio_tag value.url, controls: true unless value.url.blank? do
                          Sorry, your browser doesn't support embedded audios, but don't worry, you can
                          = link_to 'download it', value.url
                          and listen to it with your favorite audio player!
                      <%- end %>
