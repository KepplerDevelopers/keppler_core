#index-container{ :controller => "callback_functions" }
  .container
    .row
      .listing.col-lg-12.col-xs-12
        %section.content-header.index-header
          %h1{ style: 'display: inline-block' }
            = t("keppler_frontend.modules.#{controller_path.underscore}")
          = entries(@total, @objects)
        %section.content-actions
          .toolbar
            .toolbar-item
              = link_to reload_admin_frontend_callback_functions_path, class: "tool-btn", remote: true do
                %i.icon-reload
            - if can?(KepplerFrontend::CallbackFunction).download?
              .toolbar-item
                = link_to admin_frontend_callback_function_download_path(KepplerFrontend::CallbackFunction, :format => :xls), class: "tool-btn", title: t('keppler_frontend.actions.download_records') do
                  %i.icon-cloud-download
            - if can?(KepplerFrontend::CallbackFunction).upload?
              .toolbar-item
                = link_to "", class: "tool-btn", title: t('keppler_frontend.actions.upload_records'), id: "callback_function" do
                  %i.icon-cloud-upload
            .toolbar-item
              %a.tool-btn{"data-confirm" => "¿Estás seguro?", "data-method" => "delete", "v-bind:href" => "link", :rel => "nofollow", ":class" => "{disabled: !checks}" }
                %i.icon-trash
          .hide
            = form_tag admin_frontend_callback_function_upload_path(@objects), id: "upload_form_callback_functions", multipart: true, method: :post do
              = file_field_tag :file, id: "upload_file_callback_function"
          - if can?(KepplerFrontend::CallbackFunction).create?
            .add
              = link_to new_admin_frontend_callback_function_path, class: "btn-add" do
                +
                = t('keppler.actions.add')

        .box.slice-box
          .box-body.no-padding

            %table.table
              %thead
                - if @objects.size.zero?
                  %tr
                    %th.not-records.center
                      %h6= t('keppler_frontend.messages.not_found_records', model:  t("keppler_frontend.models.pluralize.callback_functions"))
                - else
                  %tr
                    %th
                      - if can?(KepplerFrontend::CallbackFunction).destroy_multiple?
                        .item-check
                          .checkbox
                            %label{ for: 'checkbox-all' }
                              %input{ type: 'checkbox', id: 'checkbox-all', '@click' => 'selectAll()' }
                              %span.cr
                                %i.cr-icon.glyphicon.glyphicon-ok
                    %th.hidden-xs
                      = sort_link(@q, :name) do
                        = t('activerecord.attributes.name')
                    %th.hidden-xs
                      = sort_link(@q, :description) do
                        = t('activerecord.attributes.description')
                    %th
                    %th
              %tbody.objects-container
                = render 'admin/layouts/listing_preloader'
                = render 'listing', objects: @objects
        %center#paginator-module
          = paginate @objects, window: 1
  %aside.control-sidebar
    = render "description"

:javascript
  $(document).ready(function(){
    $('#callback_function').click(function() {
      $('#upload_file_callback_function').click()
      $('#upload_file_callback_function').change(function() {
        $('.waiting').css('display', 'block')
        $('#upload_form_callback_function').submit()
      })
    });

    renderImg();
  });
