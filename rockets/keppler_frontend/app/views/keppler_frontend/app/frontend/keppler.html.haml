!!!
%html
  %header
    = render 'app/layouts/head'
    %link{ rel: 'stylesheet', href: 'https://cdn.linearicons.com/free/1.0.0/icon-font.min.css' }
    %link{ rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.4.1/css/simple-line-icons.css' }
  %body
    %main#keppler{:role => "main"}
      .front
        .languages
          %a.active-lang{ href: '#' } ESP
          %a{ href: '#' } ENG
        %a.btn-main{href: '/admin'} Ir a admin
        .front-content
          .front-logo
            %span Keppler
          .front-social
            %ul
              %li
                =  link_to "https://twitter.com/slicegroupxyz", target: '_blank' do
                  = icon 'fab', 'twitter'
              %li
                =  link_to "https://www.facebook.com/slicegroupxyz/", target: '_blank' do
                  = icon 'fab', 'facebook'
              %li
                =  link_to "https://www.instagram.com/slicegroupxyz/", target: '_blank' do
                  = icon 'fab', 'instagram'
              %li
                =  link_to "https://github.com/SliceDevelopers", target: '_blank' do
                  = icon 'fab', 'github'

      %section.documentation
        .container-fluid
          .documentation-header
            %p
              %span Keppler
              es un CMS con un entorno de desarrollo que cuenta con una base de gemas ya integradas, de tal forma que acelerará el desarrollo de aplicaciones de vanguardia bajo la plataforma de Ruby on Rails.
          .row
            .board
              .board-inner
                %ul#myTab.nav.nav-tabs
                  %li.active
                    %a{"data-toggle" => "tab", :href => "#features"}
                      Características
                  %li
                    %a{"data-toggle" => "tab", :href => "#gem"}
                      Gema Keppler
                  %li
                    %a{"data-toggle" => "tab", :href => "#scaffolds"}
                      Keppler Scaffolds
                  %li
                    %a{"data-toggle" => "tab", :href => "#plugins"}
                      Plugins
                  %li
                    %a{"data-toggle" => "tab", :href => "#simpleform"}
                      Simple Form con Bootstrap
              .tab-content
                #features.tab-pane.fade.in.active
                  .features-content
                    .feature-box
                      %i.lnr.lnr-database
                      = link_to 'PostgreSQL', 'https://www.postgresql.org/', target: '_blank'
                      %p Base de datos por defecto
                    .feature-box
                      %i.icon-login
                      = link_to 'Devise', 'https://github.com/plataformatec/devise', target: '_blank'
                      %p Autenticación de Usuarios
                    .feature-box
                      %i.icon-people
                      = link_to 'Rolify', 'https://github.com/RolifyCommunity/rolify', target: '_blank'
                      %p Roles de Usuarios
                    .feature-box
                      %i.icon-lock
                      = link_to 'Pundit', 'https://github.com/varvet/pundit', target: '_blank'
                      %p Autorizaciones
                    .feature-box
                      %i.icon-book-open
                      = link_to 'Kaminari', 'https://github.com/amatsuda/kaminari', target: '_blank'
                      %p Manejo de Paginación
                  .features-content
                    .feature-box
                      %i.icon-list
                      = link_to 'SimpleForm', 'https://github.com/RolifyCommunity/rolify', target: '_blank'
                      %p Helpers de Formularios
                    .feature-box
                      %i.icon-magnifier
                      = link_to 'Ransack', 'https://github.com/activerecord-hackery/ransack', target: '_blank'
                      %p Búsquedas full-text
                    .feature-box
                      %i.lnr.lnr-text-format
                      = link_to 'AdminLTE', 'https://adminlte.io', target: '_blank'
                      %p Framework front-end para el administrativo
                    .feature-box
                      %i.lnr.lnr-code
                      = link_to 'VueJS', 'https://vuejs.org/', target: '_blank'
                      %p Framework JavaScript
                    .feature-box
                      %i.icon-graph
                      = link_to 'Sitemap Generator', 'https://github.com/kjvarga/sitemap_generator', target: '_blank'
                      %p Sitemap dinámicos
                #gem.tab-pane.fade
                  .pane-box
                    %h4.content-subtitle Instalación
                    %p Una de las novedades de Keppler Admin v2.0 es el lanzamiento de una gema que nos permite el fácil y rápido manejo de las funcionalidades del CMS.
                    Para instalarlo necesitamos ejecutar el siguiente comando desde la consola:
                    %pre
                      %code.ruby
                        gem install keppler
                  .pane-box
                    %h4.content-subtitle Lista de comandos
                    %p Para verificar que está instalada la gema correctamente y ver una lista de los posibles comandos
                    que podemos utilizar, ejecutamos:
                    %pre
                      %code.ruby
                        keppler
                  .pane-box
                    %h4.content-subtitle Nuevo Proyecto
                    %p Para crear un nuevo proyecto en Ruby on Rails con Keppler Admin, podemos ejecutar:
                    %pre
                      %code.ruby
                        keppler new NuevoProyecto
                  .pane-box
                    %h4.content-subtitle Creación del archivo secrets.yml
                    %p Si detienes el proceso a la mitad o aún no tienes configurado un archivo secrets.yml con la configuración de
                    la base de datos y otros inicializadores, puedes crear la base de datos ejecutando:
                    %pre
                      %code.ruby
                        keppler db_conf
                  .pane-box
                    %h4.content-subtitle Instalación de las dependencias
                    %p Antes de poder iniciar con un proyecto nuevo, primero debemos instalar todas las gemas
                    instanciadas en el Gemfile, ubicado en la raíz del proyecto, con el comando:
                    %pre
                      %code.ruby
                        keppler dep
                #scaffolds.tab-pane.fade
                  %p Keppler ofrece la posibilidad de realizar tareas de scaffolds totalmente configurados para adaptarse al administrativo.

                  .pane-box
                    %p Para crear un nuevo módulo sólo debes llamar al siguiente comando desde la consola:
                    %pre
                      %code.ruby
                        keppler add module ModuleName attribute:type
                  .pane-box
                    %p Por ejemplo, crearemos un scaffold de productos con diversos campos y tipos de datos:
                    %pre
                      %code.ruby
                        keppler add module Product title:string description:text quantity:integer price:float arrival_date:date arrival_time:time available:boolean user:references
                  .pane-box
                    %p Luego debemos migrar la tabla a la base de datos con:
                    %pre
                      %code.ruby
                        keppler migrate
                  .pane-box
                    %p Si luego deseamos borrar, crear, migrar y llenar la base de datos desde cero, podemos realizarlo ejecutando el comando:
                    %pre
                      %code.ruby
                        keppler reset
                  .pane-box
                    %p Por último, si todo ha sido ejecutado debida y correctamente, podemos iniciar el proyecto ejecutando en la consola:
                    %pre
                      %code.ruby
                        keppler server
                #simpleform.tab-pane.fade
                  .pane-box
                    %p
                      Se ofrece una integración por defecto entre SimpleForm y Bootstrap, usted tiene la posibilidad de cambiar su funcionalidad en
                      %pre
                        %code.ruby
                          config/initializers/simple_form_bootstrap.rb
                  .pane-box
                    %p Aquí algunos ejemplos para la creación de inputs:
                    %pre
                      %code.haml
                        :preserve
                          # Inputs de tipo string o textarea
                          = f.input :name

                          # Inputs de tipo CKEditor
                          = f.input :description, as: :ckeditor, input_html: { ckeditor: { toolbar: 'mini'} }

                          # Inputs de tipo boolean
                          = f.input :public, as: :keppler_boolean

                          # Inputs de tipo file
                          = f.input :image, as: :keppler_file

                          # Inputs de tipo select
                          = f.input :role_ids, collection: Role.all, label: false, include_blank: "Seleccione un rol"

                          # Inputs de tipo radio buttons
                          = f.collection_radio_buttons :option, [['vegan', 'vegan'] ,['vegetarian', 'vegetarian']], :first, :last

                          # Inputs de tipo check_boxes
                          = f.collection_check_boxes :options, [['vegan', 'vegan'] ,['vegetarian', 'vegetarian']], :first, :last

                          # Inputs de tipo date
                          = f.input :date, input_html: { class: 'datepicker' }
                  .pane-box
                    %strong Nota:
                    %p
                      Puede revisar la documentación de
                      = link_to 'AdminLTE', 'https://adminlte.io'
                      para agregar nuevas integraciones para sus formularios a través de los
                    = link_to 'Wrappers', 'https://github.com/plataformatec/simple_form/wiki/Custom-Wrappers'
                    de simpleform.
                #plugins.tab-pane.fade
                  %p
                    La plataforma permite la adaptación de módulos con facil instalación,
                    algunos de los módulos desarrollados son:

                  %ul
                    %li
                      = link_to 'Keppler Google Analytics Dashboard', 'https://github.com/slicegroup/keppler_ga_dashboard'
                      -
                      %small Integrado
                    %li
                      = link_to 'Keppler Blog', 'https://github.com/slicegroup/keppler_blog'
                    %li
                      = link_to 'Keppler Catalogs', 'https://github.com/slicegroup/keppler_catalogs'
                    %li
                      = link_to 'Keppler Contact', 'https://github.com/slicegroup/keppler_contact_us'
    .doc-footer
      = "#{t('keppler.powered')} <span>Slice Group</span>".html_safe
    %script{ src: '/assets/app/front.js' }
